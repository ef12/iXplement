new:146:14:void* operator new(std::size_t, void*)	16	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
functional:1458:17:void* std::_Any_data::_M_access()	16	static
functional:1459:17:const void* std::_Any_data::_M_access() const	16	static
functional:1685:5:std::_Function_base::_Function_base()	16	static
functional:1687:5:std::_Function_base::~_Function_base()	16	static
functional:1694:10:bool std::_Function_base::_M_empty() const	16	static
functional:1834:11:std::function<void()>::~function()	16	static
SPI.cpp:46:13:void CallbackIRQ(const SPICallbacks&)	16	static
SPI.cpp:58:13:void CallbackTxRxDone(const SPICallbacks&)	16	static
ISPI.hpp:44:7:constexpr ISPI::ISPI()	16	static
IInitable.hpp:62:7:constexpr IConfigInitable::IConfigInitable()	16	static
SPI.cpp:81:40:SPI::SPI(const SPIInstance&)::<lambda()>	16	static
SPI.cpp:74:1:SPI::SPI(const SPIInstance&)	24	static
SPI.cpp:87:1:SPI::~SPI()	16	static
SPI.cpp:87:1:virtual SPI::~SPI()	16	static
SPI.cpp:97:6:virtual bool SPI::Init(const IConfig&)	32	static
SPI.cpp:133:6:virtual bool SPI::IsInit() const	16	static
SPI.cpp:143:6:virtual bool SPI::Sleep()	16	static
SPI.cpp:162:26:const SPI_HandleTypeDef* SPI::GetPeripheralHandle() const	16	static
SPI.cpp:173:21:DMA_HandleTypeDef*& SPI::GetDmaTxHandle()	16	static
SPI.cpp:184:21:DMA_HandleTypeDef*& SPI::GetDmaRxHandle()	16	static
SPI.cpp:197:6:virtual bool SPI::WriteDMA(const uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:225:6:virtual bool SPI::WriteReadDMA(const uint8_t*, uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:253:6:virtual bool SPI::ReadDMA(uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:277:6:virtual bool SPI::WriteInterrupt(const uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:303:6:virtual bool SPI::WriteReadInterrupt(const uint8_t*, uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:328:6:virtual bool SPI::ReadInterrupt(uint8_t*, uint16_t, const std::function<void()>&)	24	static
SPI.cpp:350:6:virtual bool SPI::WriteBlocking(const uint8_t*, uint16_t)	24	static
SPI.cpp:373:6:virtual bool SPI::WriteReadBlocking(const uint8_t*, uint8_t*, uint16_t)	40	static
SPI.cpp:395:6:virtual bool SPI::ReadBlocking(uint8_t*, uint16_t)	24	static
SPI.cpp:417:6:void SPI::SetInstance(const SPIInstance&)	16	static
SPI.cpp:434:6:void SPI::CheckAndEnableAHBPeripheralClock(const SPIInstance&)	32	static
SPI.cpp:451:6:void SPI::CheckAndDisableAHBPeripheralClock(const SPIInstance&)	16	static
SPI.cpp:467:10:uint32_t SPI::GetPolarity(const SPI::Mode&)	24	static
SPI.cpp:488:10:uint32_t SPI::GetPhase(const SPI::Mode&)	24	static
SPI.cpp:510:10:uint32_t SPI::CalculatePrescaler(uint32_t)	24	static
SPI.cpp:534:11:IRQn_Type SPI::GetIRQn(const SPIInstance&)	16	static
SPI.cpp:551:6:void SPI::SetIRQn(IRQn_Type, uint32_t, uint32_t)	24	static
SPI.cpp:562:6:void SPI::CallbackIRQ()	16	static
SPI.cpp:576:6:void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef*)	16	static
SPI.cpp:592:6:void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef*)	16	static
SPI.cpp:606:17:void SPI1_IRQHandler()	8	static
SPI.cpp:614:17:void SPI2_IRQHandler()	8	static
SPI.cpp:622:17:void SPI3_IRQHandler()	8	static
functional:525:12:constexpr std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function()	16	static
functional:1868:7:)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {}]	16	static
functional:2042:16:)>::operator bool() const [with _Res = void; _ArgTypes = {}]	16	static
functional:2122:5:) const [with _Res = void; _ArgTypes = {}]	16	static
move.h:76:5:constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
functional:1990:2:)>::operator=(_Functor&&) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>; _Res = void; _ArgTypes = {}]	32	static
functional:1929:7:)>&) [with _Res = void; _ArgTypes = {}]	32	static
functional:2014:12:)>&) [with _Res = void; _ArgTypes = {}]	16	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>&]	16	static
functional:2106:7:)>::function(_Functor) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = void; _ArgTypes = {}]	24	static
functional:2092:5:)>&) [with _Res = void; _ArgTypes = {}]	16	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = std::_Any_data&]	16	static
move.h:179:5:typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = std::_Any_data]	24	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = bool (*&)(std::_Any_data&, const std::_Any_data&, std::_Manager_operation)]	16	static
move.h:179:5:typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = bool (*)(std::_Any_data&, const std::_Any_data&, std::_Manager_operation)]	24	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = void (*&)(const std::_Any_data&)]	16	static
move.h:179:5:typename std::enable_if<std::__and_<std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = void (*)(const std::_Any_data&)]	24	static
functional:1637:4:static bool std::_Function_base::_Base_manager<_Functor>::_M_not_empty_function(const _Tp&) [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>; _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
functional:1617:2:static void std::_Function_base::_Base_manager<_Functor>::_M_init_functor(std::_Any_data&, _Functor&&) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	32	static
functional:1729:7:) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>; _ArgTypes = {}]	16	static
functional:1591:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	40	static
functional:1642:2:static void std::_Function_base::_Base_manager<_Functor>::_M_init_functor(std::_Any_data&, _Functor&&, std::true_type) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	32	static
functional:1549:2:static _Functor* std::_Function_base::_Base_manager<_Functor>::_M_get_pointer(const std::_Any_data&) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	24	static
functional:1463:7:_Tp& std::_Any_data::_M_access() [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>*]	16	static
functional:1560:2:static void std::_Function_base::_Base_manager<_Functor>::_M_clone(std::_Any_data&, const std::_Any_data&, std::true_type) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	32	static
functional:1577:2:static void std::_Function_base::_Base_manager<_Functor>::_M_destroy(std::_Any_data&, std::true_type) [with _Functor = SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
functional:1468:7:const _Tp& std::_Any_data::_M_access() const [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
move.h:47:5:_Tp* std::__addressof(_Tp&) [with _Tp = const SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
functional:1463:7:_Tp& std::_Any_data::_M_access() [with _Tp = SPI::SPI(const SPIInstance&)::<lambda()>]	16	static
SPI.hpp:58:8:SPICallbacks::~SPICallbacks()	16	static
SPI.cpp:625:1:void __static_initialization_and_destruction_0(int, int)	16	static
SPI.cpp:625:1:cpp)	8	static
SPI.cpp:625:1:cpp)	8	static
