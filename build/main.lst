ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.text
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.StartDefaultTask,"ax",%progbits
  24              		.align	1
  25              		.global	StartDefaultTask
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	StartDefaultTask:
  31              	.LFB140:
  32              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include <string.h>
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "usb_host.h"
  24:Core/Src/main.c **** #include <stdint.h>
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 2


  25:Core/Src/main.c **** #include "peripherals.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** osThreadId defaultTaskHandle;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   peripherals_init();
  68:Core/Src/main.c ****   /* Create the thread(s) */
  69:Core/Src/main.c ****   /* definition and creation of defaultTask */
  70:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 4096);
  71:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   osKernelStart();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   while (1)
  76:Core/Src/main.c ****   {
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   }
  79:Core/Src/main.c **** }
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 3


  82:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
  85:Core/Src/main.c ****   * @param  argument: Not used
  86:Core/Src/main.c ****   * @retval None
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
  89:Core/Src/main.c **** void StartDefaultTask(void const * argument)
  90:Core/Src/main.c **** {
  33              		.loc 1 90 1 view -0
  34              		.cfi_startproc
  35              		@ Volatile: function does not return.
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39              		.loc 1 90 1 is_stmt 0 view .LVU1
  40 0000 08B5     		push	{r3, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
  45 0002 09E0     		b	.L5
  46              	.LVL1:
  47              	.L7:
  91:Core/Src/main.c ****   static uint8_t task_delay = 50;
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   for(;;)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c **** 	  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
  96:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) != GPIO_PIN_RESET)
  97:Core/Src/main.c ****     {
  98:Core/Src/main.c ****       if (50== task_delay)
  99:Core/Src/main.c ****       {
 100:Core/Src/main.c ****         task_delay = 100;
  48              		.loc 1 100 9 is_stmt 1 view .LVU2
  49              		.loc 1 100 20 is_stmt 0 view .LVU3
  50 0004 0E4B     		ldr	r3, .L8
  51 0006 6422     		movs	r2, #100
  52 0008 1A70     		strb	r2, [r3]
  53              	.L4:
 101:Core/Src/main.c ****       }
 102:Core/Src/main.c ****       else
 103:Core/Src/main.c ****       {
 104:Core/Src/main.c ****         task_delay = 50;
 105:Core/Src/main.c ****       }
 106:Core/Src/main.c ****       /* Some Debouncing */
 107:Core/Src/main.c ****       osDelay(100);
  54              		.loc 1 107 7 is_stmt 1 view .LVU4
  55 000a 6420     		movs	r0, #100
  56 000c FFF7FEFF 		bl	osDelay
  57              	.LVL2:
  58              	.L2:
 108:Core/Src/main.c ****     }
 109:Core/Src/main.c ****     osDelay(task_delay);
  59              		.loc 1 109 5 view .LVU5
  60 0010 0B4B     		ldr	r3, .L8
  61 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 4


  62 0014 FFF7FEFF 		bl	osDelay
  63              	.LVL3:
  93:Core/Src/main.c ****   {
  64              		.loc 1 93 8 view .LVU6
  65              	.L5:
  91:Core/Src/main.c ****   /* Infinite loop */
  66              		.loc 1 91 3 view .LVU7
  93:Core/Src/main.c ****   {
  67              		.loc 1 93 3 view .LVU8
  95:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) != GPIO_PIN_RESET)
  68              		.loc 1 95 4 view .LVU9
  69 0018 4FF40051 		mov	r1, #8192
  70 001c 0948     		ldr	r0, .L8+4
  71 001e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  72              	.LVL4:
  96:Core/Src/main.c ****     {
  73              		.loc 1 96 5 view .LVU10
  96:Core/Src/main.c ****     {
  74              		.loc 1 96 8 is_stmt 0 view .LVU11
  75 0022 0121     		movs	r1, #1
  76 0024 0848     		ldr	r0, .L8+8
  77 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  78              	.LVL5:
  96:Core/Src/main.c ****     {
  79              		.loc 1 96 7 view .LVU12
  80 002a 0028     		cmp	r0, #0
  81 002c F0D0     		beq	.L2
  98:Core/Src/main.c ****       {
  82              		.loc 1 98 7 is_stmt 1 view .LVU13
  98:Core/Src/main.c ****       {
  83              		.loc 1 98 13 is_stmt 0 view .LVU14
  84 002e 044B     		ldr	r3, .L8
  85 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98:Core/Src/main.c ****       {
  86              		.loc 1 98 10 view .LVU15
  87 0032 322B     		cmp	r3, #50
  88 0034 E6D0     		beq	.L7
 104:Core/Src/main.c ****       }
  89              		.loc 1 104 9 is_stmt 1 view .LVU16
 104:Core/Src/main.c ****       }
  90              		.loc 1 104 20 is_stmt 0 view .LVU17
  91 0036 024B     		ldr	r3, .L8
  92 0038 3222     		movs	r2, #50
  93 003a 1A70     		strb	r2, [r3]
  94 003c E5E7     		b	.L4
  95              	.L9:
  96 003e 00BF     		.align	2
  97              	.L8:
  98 0040 00000000 		.word	.LANCHOR0
  99 0044 00180240 		.word	1073879040
 100 0048 00000240 		.word	1073872896
 101              		.cfi_endproc
 102              	.LFE140:
 104              		.section	.text.main,"ax",%progbits
 105              		.align	1
 106              		.global	main
 107              		.syntax unified
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 5


 108              		.thumb
 109              		.thumb_func
 111              	main:
 112              	.LFB139:
  66:Core/Src/main.c ****   peripherals_init();
 113              		.loc 1 66 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ Volatile: function does not return.
 116              		@ args = 0, pretend = 0, frame = 32
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 89B0     		sub	sp, sp, #36
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 40
  67:Core/Src/main.c ****   /* Create the thread(s) */
 125              		.loc 1 67 3 view .LVU19
 126 0004 FFF7FEFF 		bl	peripherals_init
 127              	.LVL6:
  70:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 128              		.loc 1 70 3 view .LVU20
 129 0008 0DF1040C 		add	ip, sp, #4
 130 000c 084C     		ldr	r4, .L13
 131 000e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 132 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 133 0014 94E80700 		ldm	r4, {r0, r1, r2}
 134 0018 8CE80700 		stm	ip, {r0, r1, r2}
  71:Core/Src/main.c **** 
 135              		.loc 1 71 3 view .LVU21
  71:Core/Src/main.c **** 
 136              		.loc 1 71 23 is_stmt 0 view .LVU22
 137 001c 0021     		movs	r1, #0
 138 001e 01A8     		add	r0, sp, #4
 139 0020 FFF7FEFF 		bl	osThreadCreate
 140              	.LVL7:
  71:Core/Src/main.c **** 
 141              		.loc 1 71 21 view .LVU23
 142 0024 034B     		ldr	r3, .L13+4
 143 0026 1860     		str	r0, [r3]
  73:Core/Src/main.c **** 
 144              		.loc 1 73 3 is_stmt 1 view .LVU24
 145 0028 FFF7FEFF 		bl	osKernelStart
 146              	.LVL8:
 147              	.L11:
  75:Core/Src/main.c ****   {
 148              		.loc 1 75 3 discriminator 1 view .LVU25
  78:Core/Src/main.c **** }
 149              		.loc 1 78 3 discriminator 1 view .LVU26
  75:Core/Src/main.c ****   {
 150              		.loc 1 75 9 discriminator 1 view .LVU27
 151 002c FEE7     		b	.L11
 152              	.L14:
 153 002e 00BF     		.align	2
 154              	.L13:
 155 0030 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 6


 156 0034 00000000 		.word	.LANCHOR2
 157              		.cfi_endproc
 158              	.LFE139:
 160              		.global	defaultTaskHandle
 161              		.section	.rodata
 162              		.align	2
 163              		.set	.LANCHOR1,. + 0
 164              	.LC2:
 165 0000 00000000 		.word	.LC0
 166 0004 00000000 		.word	StartDefaultTask
 167 0008 0000     		.short	0
 168 000a 0000     		.space	2
 169 000c 00000000 		.word	0
 170 0010 00100000 		.word	4096
 171 0014 00000000 		.word	0
 172 0018 00000000 		.word	0
 173              		.section	.bss.defaultTaskHandle,"aw",%nobits
 174              		.align	2
 175              		.set	.LANCHOR2,. + 0
 178              	defaultTaskHandle:
 179 0000 00000000 		.space	4
 180              		.section	.data.task_delay.0,"aw"
 181              		.set	.LANCHOR0,. + 0
 184              	task_delay.0:
 185 0000 32       		.byte	50
 186              		.text
 187              	.Letext0:
 188              		.file 2 "c:\\armgcc_toolchain\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.1
 189              		.file 3 "c:\\armgcc_toolchain\\gcc-arm-none-eabi-10.3-2021.10-win32\\gcc-arm-none-eabi-10.3-2021.1
 190              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 191              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 192              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 193              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 194              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 195              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 196              		.file 10 "Core/Inc/peripherals.h"
ARM GAS  C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:17     .rodata.str1.4:00000000 $d
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:24     .text.StartDefaultTask:00000000 $t
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:30     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:98     .text.StartDefaultTask:00000040 $d
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:105    .text.main:00000000 $t
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:111    .text.main:00000000 main
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:155    .text.main:00000030 $d
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:178    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:162    .rodata:00000000 $d
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:174    .bss.defaultTaskHandle:00000000 $d
C:\Users\efrank\AppData\Local\Temp\ccTOlfGt.s:184    .data.task_delay.0:00000000 task_delay.0

UNDEFINED SYMBOLS
osDelay
HAL_GPIO_TogglePin
HAL_GPIO_ReadPin
peripherals_init
osThreadCreate
osKernelStart
